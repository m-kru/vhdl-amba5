# SPDX-License-Identifier: MIT
# https://github.com/m-kru/vhdl-amba5
# Copyright (c) 2024 Micha≈Ç Kruszewski

namespace eval vhdl::amba5::apb {
  # APB package with all primary types and functions.
  namespace eval pkg {
    proc src {} {
      hbs::SetLib "lapb"
      hbs::AddFile apb.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    # Testbench for protection_t functions.
    proc tb-prot-funcs {} {
      _tb "tb_prot_funcs"
      hbs::AddFile tb/tb-prot-funcs.vhd
      hbs::Run
    }

    # Testbench for various util functions.
    proc tb-util-funcs {} {
      _tb "tb_util_funcs"
      hbs::AddFile tb/tb-util-funcs.vhd
      hbs::Run
    }

    hbs::Register
  }

  # Interface checker core.
  # It detects erroneous and unrecommended scenarios on the interface.
  namespace eval checker {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "lapb"
      hbs::AddFile checker.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    # Testbench for warnings detection logic.
    proc tb-detect-warnings {} {
      _tb "tb_detect_warnings"
      hbs::AddFile tb/checker/tb-detect-warnings.vhd
      hbs::Run
    }

    # Testbench for errors detection logic.
    proc tb-detect-errors {} {
      _tb "tb_detect_errors"
      hbs::AddFile tb/checker/tb-detect-errors.vhd
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=failure"
      hbs::Run
    }

    # Testbench checking that no warnings or errors are issued during correct transaction.
    proc tb-correct-transaction {} {
      _tb "tb_correct_transaction"
      hbs::AddFile tb/checker/tb-correct-transaction.vhd
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=warning"
      hbs::Run
    }

    hbs::Register
  }

  # Bus Function Model. It is useful only for simulation.
  namespace eval bfm {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "lapb"
      hbs::AddFile bfm.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=warning"
      hbs::SetTop $top
      src
      hbs::SetLib ""
    }

    proc tb-write {} {
      _tb "tb_write"
      hbs::AddFile tb/bfm/tb-write.vhd
      hbs::Run
    }

    proc tb-read {} {
      _tb "tb_read"
      hbs::AddFile tb/bfm/tb-read.vhd
      hbs::Run
    }

    proc tb-writeb {} {
      _tb "tb_writeb"
      hbs::AddFile tb/bfm/tb-writeb.vhd
      hbs::Run
    }

    proc tb-readb {} {
      _tb "tb_readb"
      hbs::AddFile tb/bfm/tb-readb.vhd
      hbs::Run
    }

    hbs::Register
  }

  namespace eval crossbar {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "lapb"
      hbs::AddFile crossbar.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::AddDep vhdl::amba5::apb::bfm::src
      hbs::AddDep vhdl::amba5::apb::mock-completer::src
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=error --dump-arrays"
      hbs::SetTop $top
      hbs::AddDep $hbs::ThisCorePath\::src
      hbs::SetLib ""
    }

    proc tb-two-requesters-one-completer {} {
      _tb "tb_two_requesters_one_completer"
      hbs::AddFile tb/crossbar/tb-two-requesters-one-completer.vhd
      hbs::Run
    }

    hbs::Register
  }

  namespace eval shared-bus {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "lapb"
      hbs::AddFile shared-bus.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::AddDep vhdl::amba5::apb::bfm::src
      hbs::AddDep vhdl::amba5::apb::mock-completer::src
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=error --dump-arrays"
      hbs::SetTop $top
      hbs::AddDep $hbs::ThisCorePath\::src
      hbs::SetLib ""
    }

    proc tb-two-requesters-one-completer {} {
      _tb "tb_two_requesters_one_completer"
      hbs::AddFile tb/shared-bus/tb-two-requesters-one-completer.vhd
      hbs::Run
    }

    proc tb-one-requester-two-completers {} {
      _tb "tb_one_requester_two_completers"
      hbs::AddFile tb/shared-bus/tb-one-requester-two-completers.vhd
      hbs::Run
    }

    hbs::Register
  }

  # Simple memory Completer that is always ready.
  namespace eval mock-completer {
    proc src {} {
      hbs::SetLib "lapb"
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::AddFile mock-completer.vhd
    }

    proc tb {} {
      hbs::SetTool "nvc"
      hbs::SetTop "tb"
      src
      hbs::AddDep vhdl::amba5::apb::bfm::src
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::SetLib ""
      hbs::AddFile tb/mock-completer/tb.vhd
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=warning --dump-arrays"
      hbs::Run
    }

    hbs::Register
  }

  # Bridge capable of converting stream of bytes into APB transactions.
  namespace eval serial-bridge {
    proc src {} {
      hbs::AddDep vhdl::amba5::apb::pkg::src
      hbs::SetLib "lapb"
      hbs::AddFile serial-bridge.vhd
    }

    proc _tb {top} {
      hbs::SetTool "nvc"
      hbs::AddDep vhdl::amba5::apb::checker::src
      hbs::AddDep vhdl::amba5::apb::mock-completer::src
      hbs::AddPreSimCb hbs::SetArgsPrefix "--messages=compact"
      hbs::AddPreSimCb hbs::SetArgsSuffix "--exit-severity=error --dump-arrays"
      hbs::SetTop $top
      hbs::AddDep $hbs::ThisCorePath\::src
      hbs::SetLib ""
    }

    proc tb-read {} {
      _tb "tb_read"
      hbs::AddFile tb/serial-bridge/tb-read.vhd
      hbs::Run
    }

    proc tb-write {} {
      _tb "tb_write"
      hbs::AddFile tb/serial-bridge/tb-write.vhd
      hbs::Run
    }

    hbs::Register
  }
}
